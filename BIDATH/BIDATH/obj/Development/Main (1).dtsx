<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/13/2023 12:24:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-I0N0R4UT"
  DTS:CreatorName="LAPTOP-I0N0R4UT\Lenovo"
  DTS:DTSID="{4A503E26-36EB-42AF-9EA1-BD86A04E5E83}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Main1"
  DTS:PackageType="5"
  DTS:VersionBuild="64"
  DTS:VersionGUID="{1E24CF6F-DA85-4F30-8665-311D8BBC743E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5326FCB4-05BA-4B1E-8B29-96BE707BFCB6}"
      DTS:ObjectName="ConfigFilePath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">D:\BI\DATH\BIDATH\Config.xml</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D63FC070-656E-4B13-8A92-D5BC3047136E}"
      DTS:ObjectName="SourceFilePath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">D:\BI\DATH\supermarket_sales.xls</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{004C96A2-5A67-450A-9DA9-22F500EF9813}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConfigFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FAC0B672-DAE0-4BDB-BFFD-99AF7048B9EC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DatabaseServerName">
      <DTS:VariableValue
        DTS:DataType="8">(local)</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D633056-0C5B-443C-AC5E-C1E3223871D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DDSDatabaseName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9A11171D-00B3-430D-9B47-25755294A153}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MetadataDatabaseName">
      <DTS:VariableValue
        DTS:DataType="8">BI_MetadataDB</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13ACA566-4947-4A0A-8347-D6C37045710C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NDSDatabaseName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4ACB5D4A-E4F9-47EC-8FC1-AD72A09E77D0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RedoSetUp">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74BFF9DD-ABAE-4FA1-8612-8401C3CED2D8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BDA0BA03-09EA-47E7-8087-DADAACB8911A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StageDatabaseName">
      <DTS:VariableValue
        DTS:DataType="8">BI_Stage</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Expression Task"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{c9e831e5-07dc-457d-921e-52682cf90613}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Expression Task"
      DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2022; Â© 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::RedoSetUp]" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Paths and Configs"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{aaebeba9-01f5-406c-be1a-72ac8ecefd9a}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Paths and Configs"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d927c636477d4284a7dad3c87aab0aa8"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::FilePathConfig"
          ReadWriteVariables="User::ConfigFilePath,User::DDSDatabaseName,User::MetadataDatabaseName,User::NDSDatabaseName,User::SourceFilePath,User::StageDatabaseName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_d927c636477d4284a7dad3c87aab0aa8.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E8018833-40DE-4046-8EBD-B0BE0F4A3A82}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a688daf9957a4bf1b0b571a664e174be</RootNamespace>
    <AssemblyName>ST_d927c636477d4284a7dad3c87aab0aa8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Xml;
#endregion

namespace ST_a688daf9957a4bf1b0b571a664e174be
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 

        // Check File and FOlder
        public bool CheckPathExist(string path)
        {
            return (Directory.Exists(path) || File.Exists(path));
        }
        public void ThrowErrorWhenNotExist(string path)
        {
            if (!Directory.Exists(path) && !File.Exists(path))
            {
                string errorMessage = $"{path} not existed";
                MessageBox.Show(errorMessage);
                throw new Exception(errorMessage);
            }
        }
        public void CheckForNull<T>(T value)
        {
            if (value == null)
            {
                string errorMessage = $"{nameof(value)} is null";
                MessageBox.Show(errorMessage);
                throw new ArgumentNullException(nameof(value), errorMessage);
            }
        }
		public void Main()
		{
            // TODO: Add your code here
            string FilePathConfig = Path.GetFullPath((string)Dts.Variables["$Project::FilePathConfig"].Value);
            ThrowErrorWhenNotExist(FilePathConfig);
            XmlDocument xmlDocFilePath = new XmlDocument();
            xmlDocFilePath.Load(FilePathConfig);
            string ConfigFilePath = Path.GetFullPath(xmlDocFilePath.SelectSingleNode("/Root/DatabaseCongfigFile").InnerText);
            string SourceFilePath = Path.GetFullPath(xmlDocFilePath.SelectSingleNode("/Root/DataSource/MainSource").InnerText);
            // User::ConfigFilePath,User::DDSDatabaseName,User::MetadataDatabaseName,User::NDSDatabaseName,User::SourceFilePath,User::StageDatabaseName
            ThrowErrorWhenNotExist(ConfigFilePath);
            ThrowErrorWhenNotExist(SourceFilePath);

            XmlDocument xmlDocConfig = new XmlDocument();
            xmlDocConfig.Load(ConfigFilePath);

            XmlNode metaDatabaseName = xmlDocConfig.SelectSingleNode("//Database[@Type='metadata'][1]");
            XmlNode stageDatabaseName = xmlDocConfig.SelectSingleNode("//Database[@Type='stage'][1]");
            XmlNode ndsDatabaseName = xmlDocConfig.SelectSingleNode("//Database[@Type='nds'][1]");
            XmlNode ddsDatabaseName = xmlDocConfig.SelectSingleNode("//Database[@Type='dds'][1]");

            CheckForNull(metaDatabaseName);
            CheckForNull(stageDatabaseName);
            CheckForNull(ndsDatabaseName);
            CheckForNull(ddsDatabaseName);

            Dts.Variables["User::ConfigFilePath"].Value = ConfigFilePath;
            Dts.Variables["User::SourceFilePath"].Value = SourceFilePath;

            Dts.Variables["User::MetadataDatabaseName"].Value = metaDatabaseName.Attributes["Name"].Value;
            Dts.Variables["User::StageDatabaseName"].Value = stageDatabaseName.Attributes["Name"].Value;
            Dts.Variables["User::NDSDatabaseName"].Value = ndsDatabaseName.Attributes["Name"].Value;
            Dts.Variables["User::DDSDatabaseName"].Value = ddsDatabaseName.Attributes["Name"].Value;



            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d927c636477d4284a7dad3c87aab0aa8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d927c636477d4284a7dad3c87aab0aa8</msb:DisplayName>
    <msb:ProjectId>{1B47AE7B-E051-416A-AC12-F3FA1AFC5D3C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d927c636477d4284a7dad3c87aab0aa8.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a688daf9957a4bf1b0b571a664e174be.Properties.Settings.get_Default():ST_a688daf9957a4bf1b0b571a664e174be.Properties.Sett" +
    "ings")]

namespace ST_a688daf9957a4bf1b0b571a664e174be.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a688daf9957a4bf1b0b571a664e174be")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a688daf9957a4bf1b0b571a664e174be")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a688daf9957a4bf1b0b571a664e174be.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a688daf9957a4bf1b0b571a664e174be.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a688daf9957a4bf1b0b571a664e174be.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a688daf9957a4bf1b0b571a664e174be.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a688daf9957a4bf1b0b571a664e174be.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d927c636477d4284a7dad3c87aab0aa8.dll">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
EQAzAbsAEQCTAL8ABgZZAMMAVoD7BcYAVoATAcYAUCAAAAAAhgBiBsoAAQBiIAAAAACGAHEGEAAC
AIwgAAAAAIYAIQTPAAMAvCAAAAAAhgBgBAYABACYIgAAAACGGO4EBgAEAKAiAAAAAIMY7gQGAAQA
qCIAAAAAkwjaBNYABADUIgAAAACTCBsB2wAEANsiAAAAAJMIJwHgAAQA4yIAAAAAlgguBuYABQDq
IgAAAACGGO4EBgAFAPIiAAAAAJEY9ATrAAUAAAABAIQDAAABAIQDAAABAEYDAAABAEYDCQDuBAEA
EQDuBAYAGQDuBAoAKQDuBBAAMQDuBBAAOQDuBBAAQQDuBBAASQDuBBAAUQDuBBAAWQDuBBAAYQDu
BBAAaQDuBAYAiQDuBAYAsQDuBBUAwQDuBAYAyQAZBhsA0QAZBhsA2QAgBiAA4QCWBiYA8QDuBBAA
+QDuBDMAcQADBkcAAQHABU0ACQE5BFMAEQEyA1oAGQF4A14AIQHuBAYAIQFqABAAeQCjAGMAeQCI
BmkAEQE8A3IAeQDOBXcAKQFMA30AeQAyA2kAAQFHBgEAcQDuBAYAkQDuBAYAOQHXAIQAOQGmBo0A
mQDuBJMAuQDuBAYACAAUAK0ACAAYALIAKQBzACYBLgALAP4ALgATAAcBLgAbACYBLgAjAC8BLgAr
AFgBLgAzAFgBLgA7AFgBLgBDAC8BLgBLAF4BLgBTAFgBLgBbAHUBQwBjALIASQBzACYBYQB7ALIA
YwBrALIALAA5AAMAAQAEAAMAAADeBO8AAAA7AfQAAAAyBvkAAgAHAAMAAgAIAAUAAQAJAAUAAgAK
AAcAMAAEgAAAAQAAAC8izIEAAAAAAAABAAAABAAAAAAAAAAAAAAAmwBhAAAAAAAQAAAAAAAAAAAA
AACkAIkDAAAAAAQAAAAAAAAAAAAAAJsALgQAAAAABAAAAAAAAAAAAAAAmwBCBAAAAAAEAAAAAAAA
AAAAAACbAOYFAAAAABAAAAAAAAAAAAAAAKQAOAAAAAAAAAAAAAEAAAA/BQAABQACAAAAAAAHAFcA
BgBtAAAAAFNUX2Q5MjdjNjM2NDc3ZDQyODRhN2RhZDNjODdhYWIwYWE4ADxNb2R1bGU+AFN5c3Rl
bS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVAB2YWx1ZV9fAG1zY29ybGliAExv
YWQAU1RfYTY4OGRhZjk5NTdhNGJmMWIwYjU3MWE2NjRlMTc0YmUAZGVmYXVsdEluc3RhbmNlAFNl
bGVjdFNpbmdsZU5vZGUAWG1sTm9kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWls
dXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBYbWxBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAGdldF9J
dGVtT2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAR2V0RnVsbFBhdGgAcGF0aABN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
ZDkyN2M2MzY0NzdkNDI4NGE3ZGFkM2M4N2FhYjBhYTguZGxsAENoZWNrRm9yTnVsbABTeXN0ZW0u
WG1sAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AWG1sQXR0
cmlidXRlQ29sbGVjdGlvbgBBcmd1bWVudE51bGxFeGNlcHRpb24AQ3VsdHVyZUluZm8AZ2V0X1Jl
c291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9hNjg4ZGFmOTk1N2E0YmYx
YjBiNTcxYTY2NGUxNzRiZS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU1RfYTY4OGRhZjk5NTdhNGJmMWIwYjU3MWE2NjRlMTc0YmUuUHJvcGVydGllcwBnZXRf
VmFyaWFibGVzAGdldF9BdHRyaWJ1dGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN1
Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZh
dWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABYbWxEb2N1bWVudABDaGVja1BhdGhFeGlz
dABUaHJvd0Vycm9yV2hlbk5vdEV4aXN0AGdldF9Jbm5lclRleHQAU2hvdwBNZXNzYWdlQm94AGdl
dF9Bc3NlbWJseQBEaXJlY3RvcnkAAAAAABkgAG4AbwB0ACAAZQB4AGkAcwB0AGUAZAAAG3YAYQBs
AHUAZQAgAGkAcwAgAG4AdQBsAGwAAAt2AGEAbAB1AGUAADEkAFAAcgBvAGoAZQBjAHQAOgA6AEYA
aQBsAGUAUABhAHQAaABDAG8AbgBmAGkAZwAAMy8AUgBvAG8AdAAvAEQAYQB0AGEAYgBhAHMAZQBD
AG8AbgBnAGYAaQBnAEYAaQBsAGUAADcvAFIAbwBvAHQALwBEAGEAdABhAFMAbwB1AHIAYwBlAC8A
TQBhAGkAbgBTAG8AdQByAGMAZQAAPy8ALwBEAGEAdABhAGIAYQBzAGUAWwBAAFQAeQBwAGUAPQAn
AG0AZQB0AGEAZABhAHQAYQAnAF0AWwAxAF0AATkvAC8ARABhAHQAYQBiAGEAcwBlAFsAQABUAHkA
cABlAD0AJwBzAHQAYQBnAGUAJwBdAFsAMQBdAAE1LwAvAEQAYQB0AGEAYgBhAHMAZQBbAEAAVAB5
AHAAZQA9ACcAbgBkAHMAJwBdAFsAMQBdAAE1LwAvAEQAYQB0AGEAYgBhAHMAZQBbAEAAVAB5AHAA
ZQA9ACcAZABkAHMAJwBdAFsAMQBdAAEpVQBzAGUAcgA6ADoAQwBvAG4AZgBpAGcARgBpAGwAZQBQ
AGEAdABoAAApVQBzAGUAcgA6ADoAUwBvAHUAcgBjAGUARgBpAGwAZQBQAGEAdABoAAA1VQBzAGUA
cgA6ADoATQBlAHQAYQBkAGEAdABhAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAAAJTgBhAG0AZQAA
L1UAcwBlAHIAOgA6AFMAdABhAGcAZQBEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAAK1UAcwBlAHIA
OgA6AE4ARABTAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAAArVQBzAGUAcgA6ADoARABEAFMARABh
AHQAYQBiAGEAcwBlAE4AYQBtAGUAAHFTAFQAXwBhADYAOAA4AGQAYQBmADkAOQA1ADcAYQA0AGIA
ZgAxAGIAMABiADUANwAxAGEANgA2ADQAZQAxADcANABiAGUALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAAC7GmvisvlHr1TpIJI7DfMABCABAQgDIAABBSABARER
BCABAQ4FIAEBEVUEAAECDgUAAg4ODgUAARF1DgMHAQ4CHgAFIAIBDg4NBwcODg4SPRI9Ej0SPQUg
ABKAgQUgABKAhQYgARKAiRwDIAAcBAABDg4FIAESPQ4DIAAOBAoBEj0EIAEBHAUgABKAlQYgARKA
mQ4IAAESgJ0RgKEFIAASgKUHIAIBDhKApQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJN
AwYSUQMGEhACBggDBhEUBCABAg4GMAEBAR4ABAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJN
BAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfYTY4OGRhZjk5NTdhNGJmMWIwYjU3MWE2NjRlMTc0YmUAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAw1AAAAAAAAAAAA
ACY1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYNQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDMgS8iAAABAMyBLyI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEANgA4ADgAZABhAGYAOQA5ADUANwBhADQAYgBmADEAYgAwAGIANQA3ADEAYQA2ADYA
NABlADEANwA0AGIAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADcANQAxAC4AMwAzADIAMgA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGQAOQAyADcAYwA2ADMANgA0ADcANwBkADQAMgA4ADQAYQA3AGQAYQBkADMAYwA4ADcAYQBh
AGIAMABhAGEAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZAA5ADIANwBjADYAMwA2ADQANwA3AGQANAAyADgANABhADcAZABhAGQAMwBj
ADgANwBhAGEAYgAwAGEAYQA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEANgA4ADgAZABhAGYAOQA5ADUANwBhADQAYgBmADEAYgAwAGIANQA3ADEAYQA2
ADYANABlADEANwA0AGIAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA3ADUAMQAuADMAMwAyADIAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA3ADUAMQAuADMAMwAyADIAOAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA4NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\NDSToDDS"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task: Load date form NDS to DDS"
      DTS:DTSID="{2F9DE450-706C-41CD-A67C-0A0940C4C3A7}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="NDSToDDS"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>NDSToDDS (1).dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>ConfigFilePath</ParameterName>
            <BindedVariableOrParameterName>$Package::ConfigFilePath</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_DestinationDatabaseName</ParameterName>
            <BindedVariableOrParameterName>User::DDSDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_DestinationServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_SourceDatabaseName</ParameterName>
            <BindedVariableOrParameterName>User::NDSDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_SourceServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>MetadataDataBaseName</ParameterName>
            <BindedVariableOrParameterName>User::MetadataDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>MetadataServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Up"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Set up Databases including create tables, triggers, ..."
      DTS:DTSID="{6acccb30-92df-47f8-95d2-327991e89b0c}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Up"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>SetUp.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>RedoSetUp</ParameterName>
            <BindedVariableOrParameterName>User::RedoSetUp</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>ConfigFilePath</ParameterName>
            <BindedVariableOrParameterName>User::ConfigFilePath</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SourceToStage"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task: Loading data from Source to Stage "
      DTS:DTSID="{9A9AACDA-8A32-4EAD-905C-E0B253ECB033}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SourceToStage"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>SourceToStage (1).dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>ConfigFilePath</ParameterName>
            <BindedVariableOrParameterName>$Package::ConfigFilePath</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>SourceFilePath</ParameterName>
            <BindedVariableOrParameterName>$Package::SourceFilePath</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>DestinationOLEDDatabaseName</ParameterName>
            <BindedVariableOrParameterName>User::StageDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>DestinationOLEDServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>MetadataDataBaseName</ParameterName>
            <BindedVariableOrParameterName>User::MetadataDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>MetadataServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\StageToNDS"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{EC2F7C08-40A6-4C30-9048-4C412ECD62D3}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="StageToNDS"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>StageToNDS (1).dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>ConfigFilePath</ParameterName>
            <BindedVariableOrParameterName>User::ConfigFilePath</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_DestinationDatabaseName</ParameterName>
            <BindedVariableOrParameterName>User::NDSDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_DestinationServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_SourceDatabaseName</ParameterName>
            <BindedVariableOrParameterName>User::StageDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>OLED_SourceServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>MetadataDataBaseName</ParameterName>
            <BindedVariableOrParameterName>User::MetadataDatabaseName</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>MetadataServerName</ParameterName>
            <BindedVariableOrParameterName>User::DatabaseServerName</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{42109db5-7710-4274-bcc4-124ab225f302}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::RedoSetUp] == True"
      DTS:From="Package\Expression Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Set Up" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{E2D0E056-631E-4037-97A9-009FE10F256D}"
      DTS:From="Package\Expression Task"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\SourceToStage" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{77E6298F-1096-499B-B48D-DB971D39F11D}"
      DTS:From="Package\Set Up"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\SourceToStage" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{DFE02616-CC21-49D8-82CD-D50F4B23C449}"
      DTS:From="Package\SourceToStage"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\StageToNDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{1A45100C-FAB1-47AD-9A9A-2A82284EA636}"
      DTS:From="Package\StageToNDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\NDSToDDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{5E27A22D-1A5A-479A-AA0C-CF7727758CFF}"
      DTS:From="Package\Get Paths and Configs"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Expression Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155,42"
          Id="Package\Expression Task"
          TopLeft="348,61" />
        <NodeLayout
          Size="183,45"
          Id="Package\Get Paths and Configs"
          TopLeft="130,62" />
        <NodeLayout
          Size="132,42"
          Id="Package\NDSToDDS"
          TopLeft="934,60" />
        <NodeLayout
          Size="110,42"
          Id="Package\Set Up"
          TopLeft="364,151" />
        <NodeLayout
          Size="150,42"
          Id="Package\SourceToStage"
          TopLeft="544,63" />
        <NodeLayout
          Size="138,42"
          Id="Package\StageToNDS"
          TopLeft="746,60" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="422.25,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,12.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="503,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41,0"
              Start="0,0"
              End="33.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="436,151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183,-46"
              Start="0,0"
              End="183,-38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-14.7956989247312" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-14.7956989247312"
                    Point2="0,-18.7956989247312"
                    Point3="4,-18.7956989247312" />
                  <mssgle:LineSegment
                    End="179,-18.7956989247312" />
                  <mssgle:CubicBezierSegment
                    Point1="179,-18.7956989247312"
                    Point2="183,-18.7956989247312"
                    Point3="183,-22.7956989247312" />
                  <mssgle:LineSegment
                    End="183,-38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="694,82.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52,0"
              Start="0,0"
              End="44.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="884,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50,0"
              Start="0,0"
              End="42.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="42.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="313,83.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35,0"
              Start="0,0"
              End="27.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>